
image:
  registry: docker.io
  repository: bitnami/wordpress
  tag: 6.3.0
  pullPolicy: Always
  ## Optionally specify an array of imagePullSecrets.
  ## Secrets must be manually created in the namespace.
  ## ref: https://kubernetes.io/docs/tasks/configure-pod-container/pull-image-private-registry/
  ##
  # pullSecrets:
  #   - myRegistryKeySecretName
  ## Set to true if you would like to see extra information on logs
  ##
  debug: false

wordpressUsername: user
wordpressPassword: "password"
wordpressSkipInstall: false

# updateStrategy:
#   type: RollingUpdate

## Set to `false` to allow the container to be started with blank passwords
## ref: https://github.com/bitnami/bitnami-docker-wordpress#environment-variables
##
allowEmptyPassword: true

replicaCount: 1

securityContext:
  enabled: true
  fsGroup: 1001
  runAsUser: 1001

## Allow health checks to be pointed at the https port
# healthcheckHttps: false


## Kubernetes configuration
## For minikube, set this to NodePort, elsewhere use LoadBalancer or ClusterIP
##
service:
  type: NodePort
  ## HTTP Port
  port: 80
  ## HTTPS Port
  httpsPort: 443
  httpsTargetPort: https
  nodePorts:
    http: ""
    https: ""
    metrics: ""
  # externalTrafficPolicy: Cluster
  annotations: {}
  ## Limits which cidr blocks can connect to service's load balancer
  ## Only valid if service.type: LoadBalancer
  loadBalancerSourceRanges: []

ingress:
  ## Set to true to enable ingress record generation
  ##
  enabled: false

  ## Set this to true in order to add the corresponding annotations for cert-manager
  ##
  certManager: false

  ## When the ingress is enabled, a host pointing to this will be created
  ##
  hostname: wordpress.local

 
  secrets: []
persistence:
  enabled: true
  accessMode: ReadWriteOnce
  size: 10Gi

mariadb:
  enabled: true
  replication:
    enabled: false
  db:
    name: bitnami_wordpress
    user: bn_wordpress

  master:
    persistence:
      enabled: true
      # storageClass: "-"
      accessModes:
        - ReadWriteOnce
      size: 8Gi

